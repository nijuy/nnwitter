{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","date","Date","createdAt","onDeleteClick","ok","window","confirm","id","doc","delete","refFromURL","fileURL","toggleEditing","e","update","getFullYear","getMonth","getDate","getHours","getMinutes","src","width","height","alt","NweetFactory","userObj","attachment","setAttactment","nweet","setNweet","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedE","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","s","nweetArray","docs","map","d","n","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","push","signOut","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAcAA,IAASC,cATc,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKJ,IAAMC,EAAmBR,IACnBS,EAAcT,IAASU,OACvBC,EAAYX,IAASY,YACrBC,EAAiBb,IAASc,U,eCoDvBC,EAnEE,WACd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GACd,MAAkCA,EAA3BC,OAAUC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,MAEX,UAATD,EACCV,EAASW,GACO,aAATD,GACPR,EAAYS,IAIdC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACbL,EAAMM,iBADO,UAKNX,EALM,gCAMQZ,EAAYwB,+BAA+BhB,EAAOE,GAN1D,OAMLe,EANK,+CASQzB,EAAY0B,2BAA2BlB,EAAOE,GATtD,QASLe,EATK,eAYTE,QAAQC,IAAIH,GAZH,kDAcTV,EAAS,KAAMc,SAdN,0DAAH,sDAoBd,OACI,mCACI,uBAAMC,UAAY,QAAQT,SAAYA,EAAtC,UACI,uBAAOS,UAAW,QACdX,KAAO,QACPY,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRb,MAASZ,EACTQ,SAAYA,IAEhB,uBAAOc,UAAW,KACdX,KAAO,WACPY,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRb,MAASV,EACTM,SAAYA,IAEhB,uBAAOc,UAAY,SACfC,KAAK,SACLX,MAAOR,EAAa,iBAAmB,YAE1CE,EACD,uBAAMoB,QA1BI,WAAQrB,GAAc,SAACsB,GAAD,OAAWA,MA0B3C,cAAkCvB,EAAa,UAAY,iBAA3D,aChCDwB,G,MA1BF,WAET,IAAMC,EAAa,uCAAG,WAAOpB,GAAP,iBAAAK,EAAA,4DAIN,YAHMH,EAAUF,EAApBC,OAAUC,MAIdmB,EAAW,IAAIvC,EAAiBE,KAAKsC,mBACrB,WAATpB,IACPmB,EAAW,IAAIvC,EAAiBE,KAAKuC,oBAPvB,SAUZxC,EAAYyC,gBAAgBH,GAVhB,2CAAH,sDAanB,OACI,sBAAKR,UAAY,OAAjB,UACI,cAAC,EAAD,IACA,sBAAKA,UAAY,UAAjB,UACI,wBAAQA,UAAY,WAAWI,QAAWG,EAAelB,KAAO,SAAhE,mCACA,wBAAQW,UAAY,YAAYI,QAAWG,EAAelB,KAAO,SAAjE,2C,QCgDDuB,G,MAtED,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QACtB,EAA8BrC,oBAAS,GAAvC,mBAAOsC,EAAP,KAAgBC,EAAhB,KACA,EAAgCvC,mBAASoC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACIC,EAAO,IAAIC,KAAKR,EAASS,WAEvBC,EAAa,uCAAG,4BAAA/B,EAAA,yDACZgC,EAAKC,OAAOC,QAAQ,sFAC1B7B,QAAQC,IAAIe,EAASc,KACjBH,EAHc,gCAIRpD,EAAUwD,IAAV,iBAAwBf,EAASc,KAAME,SAJ/B,uBAKRvD,EAAewD,WAAWjB,EAASkB,SAASF,SALpC,iEAAH,qDAWbG,EAAgB,WAClBhB,GAAW,SAAAX,GAAI,OAAKA,MAcxB,OACI,qBAAKL,UAAY,QAAjB,SAEMe,EACE,qCACA,uBAAMxB,SAXD,SAAC0C,GACdA,EAAExC,iBACFrB,EAAUwD,IAAV,iBAAwBf,EAASc,KAAMO,OAAO,CAACjB,KAAOC,IACtDF,GAAW,IAQH,UACI,uBACIf,KAAK,OACLC,YAAc,sBACdZ,MAAS4B,EACTf,UAAQ,EACRjB,SAtBH,SAAC+C,GACd,IAAkB3C,EAAW2C,EAArB7C,OAAUE,MAClB6B,EAAY7B,MAsBA,uBACIW,KAAK,SACLX,MAAQ,oBAGhB,wBAAQc,QAAW4B,EAAnB,yBAEE,qCACE,+BACKZ,EAAKe,cADV,IAC0Bf,EAAKgB,WAAa,EAD5C,IACgDhB,EAAKiB,UAAU,uBAC1DjB,EAAKkB,WAFV,IAEuBlB,EAAKmB,gBAE5B,6BAAK1B,EAASI,OACZJ,EAASkB,SAAW,qBAAKS,IAAK3B,EAASkB,QAASU,MAAQ,QAAQC,OAAS,QAAQC,IAAO9B,EAASkB,UACjGjB,GACE,qCACI,wBAAQd,UAAY,OAAOI,QAAW4B,EAAtC,oBACA,wBAAQhC,UAAY,OAAOI,QAAWmB,EAAtC,gC,QCSbqB,G,MArEM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,EAAoCpE,mBAAS,IAA7C,mBAAOqE,EAAP,KAAmBC,EAAnB,KACA,EAA0BtE,mBAAS,IAAnC,mBAAOuE,EAAP,KAAcC,EAAd,KAEM1D,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACTuC,EAAU,GAEd5C,EAAMM,iBACY,KAAfqD,EAJU,wBAKHI,EAAU5E,EAAe6E,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,gBALpD,SAMcJ,EAAQK,UAAUT,EAAY,YAN5C,cAMHU,EANG,gBAOOA,EAASL,IAAIM,iBAPpB,OAOT1B,EAPS,sBAUPlB,EAAW,CACbI,KAAO+B,EACP1B,UAAYD,KAAKqC,MACjBC,UAAYd,EAAQQ,IACpBtB,QAAUA,GAdD,UAiBP3D,EAAUwF,WAAW,UAAUC,IAAIhD,GAjB5B,QAkBboC,EAAS,IACTF,EAAc,IAnBD,4CAAH,sDA2Cd,OACI,uBAAM/C,UAAY,WAAWT,SAAYA,EAAzC,UACI,uBAAOS,UAAY,QACfC,KAAK,OACLX,MAAS0D,EACT9D,SA1BK,SAAC+C,GACd,IAAkB3C,EAAW2C,EAArB7C,OAAUE,MAClB2D,EAAS3D,IAyBDY,YAAY,yEACZ4D,UAAW,MAEf,uBAAO9D,UAAY,QAAQC,KAAK,OAAO8D,OAAS,UAAU7E,SAzB7C,SAAC+C,GAClB,IACM+B,EADwB/B,EAAvB7C,OAAW6E,MACI,GAChBC,EAAS,IAAIC,WAEnBD,EAAOE,UAAY,SAACC,GAChB,IAAyBC,EAAYD,EAA7BE,cAAiBD,OACzBvB,EAAcuB,IAElBJ,EAAOM,cAAcR,MAiBjB,uBAAOhE,UAAY,SAASC,KAAK,SAASX,MAAQ,WAEhDwD,GACE,gCACI,qBAAKN,IAAOM,EAAYL,MAAQ,OAAOC,OAAS,OAAOC,IAAKG,IAC5D,wBAAQ1C,QAnBH,WACjB2C,EAAc,OAkBF,6BCrCL0B,EAzBF,SAAC,GAAe,IAAd5B,EAAa,EAAbA,QACX,EAA2BpE,mBAAS,IAApC,mBAAMiG,EAAN,KAAcC,EAAd,KASA,OAPAC,qBAAU,WACNxG,EAAUwF,WAAW,UAAUiB,YAAW,SAACC,GACvC,IAAMC,EAAaD,EAAEE,KAAKC,KAAI,SAACC,GAAD,oBAAUvD,GAAKuD,EAAEvD,IAAQuD,EAAEvF,WACzDgF,EAAUI,QAEf,IAGC,gCACI,cAAC,EAAD,CAAclC,QAAWA,IACzB,8BACM6B,EAAOO,KAAI,SAACE,GAAD,OACT,cAAC,EAAD,CAEItE,SAAYsE,EACZrE,QAAWqE,EAAExB,YAAcd,EAAQQ,KAF5B8B,EAAExD,aChBlB,G,MAAA,YAA+B,IAA5ByD,EAA2B,EAA3BA,YAAavC,EAAc,EAAdA,QACrBwC,EAAUC,cAChB,EAA4C7G,mBAASoE,EAAQ0C,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAOMC,EAAW,uCAAG,4BAAAlG,EAAA,sEACIpB,EAAUwF,WAAW,UACzC+B,MAAM,YAAa,KAAM9C,EAAQQ,KACjCuC,QAAQ,aACRC,MAJgB,OACXnB,EADW,OAKjB7E,QAAQC,IAAI4E,EAAOM,KAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAEvF,WALlB,2CAAH,qDAaXJ,EAAQ,uCAAG,WAAM0C,GAAN,SAAAzC,EAAA,yDACbyC,EAAExC,iBACCoD,EAAQ0C,cAAgBC,EAFd,gCAGH3C,EAAQiD,cAAc,CACxBP,YAAcC,IAJT,OAMTJ,IANS,OAQbC,EAAQU,KAAK,KACbX,IATa,2CAAH,sDAgBd,OAJAR,qBAAW,WACPc,MACD,IAGC,qCACA,uBAAMnG,SAAYA,EAAlB,UACI,uBAAOS,UAAY,MACfd,SAzBK,SAAC+C,GACd,IAAkB3C,EAAW2C,EAArB7C,OAAUE,MAClBmG,EAAkBnG,IAwBVW,KAAK,OACLC,YAAY,eACZZ,MAASkG,IAEb,uBAAOxF,UAAY,aAAaC,KAAK,SAASX,MAAM,cAExD,wBAAQU,UAAY,SAASI,QA7CX,WAClBlC,EAAY8H,UACZX,EAAQU,KAAK,MA2Cb,4BChCOE,G,MAlBI,SAAC,GAAiB,IAC7B5G,EAD4B,EAAdwD,QACC0C,YAMnB,OAJY,OAATlG,IACCA,EAAO,QAIP,8BACI,+BACI,mCAAK,cAAC,IAAD,CAAM6G,GAAI,IAAV,oBAAL,OACA,mCAAK,eAAC,IAAD,CAAMA,GAAI,WAAV,cAAuB7G,EAAvB,0BAAL,cCgBD8G,EAxBG,SAAC,GAA0C,IAAxCf,EAAuC,EAAvCA,YAAagB,EAA0B,EAA1BA,WAAYvD,EAAc,EAAdA,QAC1C,OACA,eAAC,IAAD,WACMuD,GAAc,cAAC,EAAD,CAAYvD,QAAWA,IACvC,cAAC,IAAD,UACMuD,EACE,qCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAApB,SACI,cAAC,EAAD,CAAMzD,QAAWA,MAErB,cAAC,IAAD,CAAOwD,OAAK,EAACC,KAAO,WAApB,SACI,cAAC,EAAD,CAASzD,QAAWA,EAASuC,YAAeA,SAIpD,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAO,IAApB,SACI,cAAC,EAAD,YCkBLC,MArCf,WACE,MAAuB9H,oBAAS,GAAhC,mBAAM+H,EAAN,KAAYC,EAAZ,KACA,EAA8BhI,mBAAS,MAAvC,mBAAOoE,EAAP,KAAgB6D,EAAhB,KAqBA,OAnBA9B,qBAAU,WACR1G,EAAYyI,oBAAmB,SAACC,GAE5BF,EADEE,EACS,CACTrB,YAAcqB,EAAKrB,YACnBlC,IAAMuD,EAAKvD,IACXyC,cAAgB,SAACe,GAAD,OAAUD,EAAKd,cAAce,KAGpC,MAEbJ,GAAQ,QAET,IAOD,mCACED,EACA,cAAC,EAAD,CACE3D,QAAWA,EACXuD,WAAcU,QAAQjE,GACtBuC,YAVc,WAClBsB,EAAWxI,EAAY6I,gBAWrB,yBC/BNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8d9656dd.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAntEzzv9nNbTEsI0DnsCk3MKvkUzl5oEY\",\r\n    authDomain: \"nwitter-b14ff.firebaseapp.com\",\r\n    projectId: \"nwitter-b14ff\",\r\n    storageBucket: \"nwitter-b14ff.appspot.com\",\r\n    messagingSenderId: \"826355993873\",\r\n    appId: \"1:826355993873:web:07c8216562e850aab810b0\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase; \r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\nimport './AuthForm.css';\r\n\r\n const AuthForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const onChange = (event) => {\r\n        const{ target : {name, value} } = event;\r\n        \r\n        if(name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            }\r\n            else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            \r\n            console.log(data);\r\n        } catch(error){\r\n            setError(error.message);\r\n        } \r\n    }\r\n\r\n    const toggleAccount = () => { setNewAccount((prev) => !prev); }\r\n\r\n    return(\r\n        <>\r\n            <form className = 'login' onSubmit = {onSubmit}>\r\n                <input className ='email'\r\n                    name = \"email\" \r\n                    type='email' \r\n                    placeholder=\"Email\" \r\n                    required \r\n                    value = {email}\r\n                    onChange = {onChange}\r\n                />\r\n                <input className ='pw'\r\n                    name = \"password\" \r\n                    type='password' \r\n                    placeholder='Password' \r\n                    required \r\n                    value = {password}\r\n                    onChange = {onChange}\r\n                />\r\n                <input className = 'submit'\r\n                    type='submit' \r\n                    value={newAccount ? \"Create Account\" : 'Sign in'}\r\n                />\r\n                {error}\r\n                <span onClick = {toggleAccount}> {newAccount ? \"Sign in\" : \"Create Account\"} </span>\r\n            </form>\r\n        </>\r\n    );\r\n\r\n }\r\n\r\n export default AuthForm;","import React from 'react';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\nimport './Auth.css';\r\n\r\n//이렇게 작성하면 다른 파일에서 자동으로 import 가능\r\nconst Auth = () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const { target : {name} } = event;\r\n        let provider;\r\n\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === 'github'){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div className = 'root'>\r\n            <AuthForm />\r\n            <div className = 'buttons'> \r\n                <button className = 'ggbutton' onClick = {onSocialClick} name = \"google\"> Continue with Google</button>\r\n                <button className = 'gitbutton' onClick = {onSocialClick} name = \"github\"> Continue with Github</button>    \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport './Nweet.css';\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    let date = new Date(nweetObj.createdAt);\r\n    \r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"정말 이 트윗을 지우시겠습니까?\");\r\n        console.log(nweetObj.id);\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.fileURL).delete();\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => {\r\n        setEditing(prev => !prev);\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const { target : {value} } = e;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dbService.doc(`nweets/${nweetObj.id}`).update({text : newNweet});\r\n        setEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className = 'tweet'>\r\n            {\r\n              editing ? (\r\n                <>\r\n                <form onSubmit = {onSubmit}> \r\n                    <input \r\n                        type='text' \r\n                        placeholder = \"새 트윗\" \r\n                        value = {newNweet} \r\n                        required \r\n                        onChange = {onChange}\r\n                    /> \r\n                    <input \r\n                        type='submit'\r\n                        value = '수정'\r\n                    />\r\n                </form>\r\n                <button onClick = {toggleEditing}> Cancle </button>\r\n                </>\r\n              ) : <>\r\n                    <h5>\r\n                        {date.getFullYear()}.{date.getMonth() + 1}.{date.getDate()}<br/>\r\n                        {date.getHours()}:{date.getMinutes()}\r\n                    </h5>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    { nweetObj.fileURL && <img src={nweetObj.fileURL} width = '100px' height = '100px' alt = {nweetObj.fileURL}/>}\r\n                    { isOwner && (\r\n                        <>\r\n                            <button className = 'edit' onClick = {toggleEditing}> Edit </button>\r\n                            <button className = 'edit' onClick = {onDeleteClick}> Delete </button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { v4 as uuidv4 } from 'uuid'; \r\nimport \"./NweetFactory.css\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [attachment, setAttactment] = useState(''); \r\n    const [nweet, setNweet] = useState('');\r\n\r\n    const onSubmit = async (event) => {\r\n        let fileURL = '';\r\n    \r\n        event.preventDefault();\r\n        if(attachment !== '') {\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await fileRef.putString(attachment, \"data_url\");\r\n            fileURL = await response.ref.getDownloadURL();\r\n        }\r\n        \r\n        const nweetObj = {\r\n            text : nweet,\r\n            createdAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            fileURL : fileURL\r\n        };\r\n        \r\n        await dbService.collection('nweets').add(nweetObj);\r\n        setNweet('');\r\n        setAttactment('');\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const { target : {value} } = e;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onFileChange = (e) => {\r\n        const{ target : { files } } = e;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onloadend = (finishedE) => {\r\n            const { currentTarget : {result} } = finishedE;\r\n            setAttactment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    const onClearPhoto = () => {\r\n        setAttactment(null);\r\n    }\r\n\r\n    return (\r\n        <form className = 'tweeting' onSubmit = {onSubmit}>\r\n            <input className = 'write'\r\n                type='text' \r\n                value = {nweet} \r\n                onChange = {onChange} \r\n                placeholder='무슨 일이 일어나고 있나요?' \r\n                maxLength={120} \r\n            />\r\n            <input className = 'photo' type='file' accept = 'image/*' onChange = {onFileChange} />\r\n            <input className = 'upload' type='submit' value = '➡'/>\r\n            \r\n            { attachment && (\r\n                <div>\r\n                    <img src = {attachment} width = '80px' height = '80px' alt={attachment} />\r\n                    <button onClick = {onClearPhoto}> Clear </button>\r\n                </div>\r\n            )}      \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NweetFactory;","import { dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({userObj}) => {\r\n    const[nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection('nweets').onSnapshot((s) => {\r\n            const nweetArray = s.docs.map((d) => ({ id : d.id , ...d.data()}) );\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <NweetFactory userObj = {userObj} />\r\n            <div>\r\n                { nweets.map((n) => (\r\n                    <Nweet \r\n                        key = {n.id}\r\n                        nweetObj = {n}\r\n                        isOwner = {n.creatorId === userObj.uid}\r\n                    />))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Profile.css';\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    };\r\n\r\n    const getMyNweets = async () => {\r\n       const nweets = await dbService.collection('nweets')\r\n       .where('creatorId', '==', userObj.uid)\r\n       .orderBy(\"createdAt\")\r\n       .get();\r\n       console.log(nweets.docs.map(d => d.data()));\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const { target : {value} } = e;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async(e) => {\r\n        e.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName : newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n        history.push('/');\r\n        refreshUser();\r\n    };\r\n\r\n    useEffect (() => {\r\n        getMyNweets();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit = {onSubmit}>\r\n            <input className = 'new'\r\n                onChange = {onChange}\r\n                type='text' \r\n                placeholder='Display name' \r\n                value = {newDisplayName}\r\n            />\r\n            <input className = 'newprofile' type='submit' value='Update' />\r\n        </form>\r\n        <button className = 'logout' onClick = {onLogOutClick}> Log Out </button>\r\n        </>\r\n    );\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    let name = userObj.displayName;\r\n    \r\n    if(name === null){\r\n        name = 'user';\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li> <Link to =\"/\"> Home </Link> </li>\r\n                <li> <Link to =\"/profile\"> {name}님의 Profile</Link> </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n    \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n    <Router>\r\n        { isLoggedIn && <Navigation userObj = {userObj}/> }\r\n        <Switch>\r\n            { isLoggedIn ? (\r\n                <>\r\n                    <Route exact path = \"/\">\r\n                        <Home userObj = {userObj}/>\r\n                    </Route>\r\n                    <Route exact path = \"/profile\">\r\n                        <Profile userObj = {userObj} refreshUser = {refreshUser}/>\r\n                    </Route>\r\n                </> \r\n            ) : (\r\n                <Route exact path = \"/\">\r\n                    <Auth />\r\n                </Route>\r\n            )}  \r\n        </Switch>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const[init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) { \n        setUserObj({\n          displayName : user.displayName,\n          uid : user.uid,\n          updateProfile : (args) => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n\n  const refreshUser = () => {\n    setUserObj(authService.currentUser);\n  };\n\n  return (\n    <>\n    { init ? \n      <AppRouter \n        userObj = {userObj} \n        isLoggedIn = {Boolean(userObj)}\n        refreshUser = {refreshUser}\n      /> : \n      \"Initializing . . . \" \n    }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}